@model PowerAppsCMS.ViewModel.UserViewModel

@using (Html.BeginForm("EditUser", "User", FormMethod.Post))
{
    <div class="card-header">
        Edit User Power Apps
    </div>

    <div class="custom-form-container">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.User.ID)
        <input type="text" name="currentPage" id="currentPage" class="currentPage hide" value="@ViewBag.Page" />
        <div class="row">
            <div class="col-lg-6 col-12 custom-form-field">
                <p class="form-custom-label">Username</p>
                @Html.EditorFor(model => model.User.Username, new { htmlAttributes = new { @class = "form-control full-width", placeholder = "Enter Username", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.User.Username, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 col-12 custom-form-field">
                <p class="form-custom-label">Employee Number</p>
                @Html.EditorFor(model => model.User.EmployeeNumber, new { htmlAttributes = new { @class = "form-control full-width", placeholder = "Enter Employee Number", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.User.EmployeeNumber, "", new { @class = "text-danger input-form" })
                <p class="text-danger">@ViewBag.ExistEmployeeNumber</p>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-12 custom-form-field">
                <p class="form-custom-label">Name</p>
                @Html.EditorFor(model => model.User.Name, new { htmlAttributes = new { @class = "form-control full-width", placeholder = "Enter Name" } })
                @Html.ValidationMessageFor(model => model.User.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 col-12 custom-form-field">
                <p class="form-custom-label">Select Role</p>
                @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control full-width" })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-12 custom-form-field process-group-dropdown">
                <p class="form-custom-label">Select Process Group</p>
                @Html.DropDownList("ProcessGroupID", null, htmlAttributes: new { @class = "form-control full-width" })
                @Html.ValidationMessageFor(model => model.ProcessGroupID, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 col-12 custom-form-field process-group-checkbox hide">
                <p class="form-custom-label">Select Process Group</p>
                @foreach (var item in Model.ProcessGroupList)
                {
                    string checkedString = Model.UserProcessGroupList.Select(x => x.ProcessGroupID).Contains(item.ID) ? "checked=checked" : string.Empty;
                    <div class="custom-control custom-checkbox mr-sm-2">
                        <input type="checkbox" class="custom-control-input process-group" name="SelectedProcessGroup" value="@item.ID" id="@item.ID" @checkedString>
                        <label class="custom-control-label" for="@item.ID">@item.Name</label>
                    </div>
                }
            </div>
            <div class="col-lg-6 col-12 custom-form-field" id="parent-user">
                <p class="form-custom-label">Select Parent User</p>
                @Html.DropDownList("ParentUserID", null, htmlAttributes: new { @class = "form-control full-width" })
                @Html.ValidationMessageFor(model => model.ParentUserID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row justify-content-between mt-5">
            <div class="col-auto">
                <a href="@Url.Action("Details", "User", new { id = Model.User.ID, page = ViewBag.Page })" class="btn btn-primary mb-3"><i data-feather="arrow-left"></i> &nbsp; Back to User Details</a>
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-success edit-user-powerapps mr-0 mb-3"><i data-feather="save"></i> &nbsp; Save</button>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("UpdatePhoto", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="card-header ">
        Edit Images
    </div>
    <div class="card shadow">

        <div class="custom-form-container">
            <input type="text" name="currentPage" id="currentPage" class="currentPage hide" value="@ViewBag.Page" />
            <div class="row">
                <div class="col-md-6 col-12">
                    <label class="form-custom-label">Images</label>
                    <br />
                    <br />
                    <a href="#update-photo" class="btn btn-sm btn-primary add-new-photo">Add new photo</a>
                    <div class="update-photo hide" id="update-photo">

                        <input type="text" id="personId" class="hide" name="pegawaiID" value="@Model.User.ID" />
                        <input type="file" name="photos" id="photos" multiple />
                        <br />
                        <input type="submit" value="Upload" class="btn btn-sm btn-primary upload-photo-btn" />
                        <a href="#" class="btn btn-sm btn-danger cancel-add-new-photo">Cancel</a>

                    </div>
                </div>
                <div class="col-12">

                    <div class="masonry-container">
                        @foreach (var image in Model.UserImages)
                        {
                            <div class="masonry-item" id="uploadedImage">
                                <img src="@image.BlobImage" class="masonry-thumbnail" />
                                <input type="text" class="hide" value="@image.ID" name="imageID" />
                                <a href="#" class="btn btn-danger btn-sm deleteImageUser"><i data-feather="trash-2"></i></a>
                            </div>
                        }
                    </div>

                </div>
            </div>
            <div class="row justify-content-between mt-5">
                <div class="col-auto">
                    <a href="@Url.Action("Details", "User", new { id = Model.User.ID, page = ViewBag.Page})" class="btn btn-primary mb-3"><i data-feather="arrow-left"></i> &nbsp; Back to User Details</a>
                </div>
                <div class="col-auto">
                    <a href="@Url.Action("RetrainImage", "User", new { id = Model.User.ID, page = ViewBag.Page})" class="btn btn-success retrain-photo"><i data-feather="save"></i> &nbsp; Save</a>
                </div>
            </div>
        </div>
    </div>
}
