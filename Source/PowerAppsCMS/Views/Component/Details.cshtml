@model PowerAppsCMS.ViewModel.ComponentViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">Product Management</li>
        <li class="breadcrumb-item">Manage Component</li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Component")">Components</a></li>
        <li class="breadcrumb-item active" aria-current="page">Component Details</li>
    </ol>
</nav>
<h1 class="page-title">Component Details</h1>


<div class="card shadow">
    <div class="card-header">
        Component Details
    </div>
    <div class="view-data-container">
        <div class="row">
            <div class="col-md-4 ">
                <label class="view-data__label form-custom-label">Part Number</label>
                <p class="view-data__content">@Html.DisplayFor(model => model.Component.PartNumber)</p>
            </div>
            <div class="col-md-4 col-12">
                <label class="view-data__label form-custom-label">Part </label>
                <p class="view-data__content">@Html.DisplayFor(model => model.Component.PartName)</p>
            </div>
            <div class="col-md-4 col-12">
                <label class="view-data__label form-custom-label">Material</label>
                <p class="view-data__content">@Html.DisplayFor(model => model.Component.Material.Name)</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-12">
                <label class="view-data__label form-custom-label">Long (mm)</label>
                <p class="view-data__content">@Html.DisplayFor(model => model.Component.Long)</p>
            </div>
            <div class="col-md-4 col-12">
                <label class="view-data__label form-custom-label">Width (mm)</label>
                <p class="view-data__content">@Html.DisplayFor(model => model.Component.Width)</p>
            </div>
            <div class="col-md-4 col-12">
                <label class="view-data__label form-custom-label">Thickness (mm)</label>
                <p class="view-data__content">@Html.DisplayFor(model => model.Component.Thickness)</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-12">
                <label class="view-data__label form-custom-label">Outer Diameter</label>
                <p class="view-data__content">@Html.DisplayFor(model => model.Component.OuterDiameter)</p>
            </div>
            <div class="col-md-4 col-12">
                <label class="view-data__label form-custom-label">Inner Diameter</label>
                <p class="view-data__content">@Html.DisplayFor(model => model.Component.InnerDiameter)</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-12">
                <label class="view-data__label form-custom-label">In House</label>
                @{
                    if (Model.Component.IsInHouse == true)
                    {
                        <p class="view-data__content text-success">Yes</p>
                    }
                    else
                    {
                        <p class="view-data__content text-danger">No</p>
                    }
                }
            </div>
        </div>
        <div class="row justify-content-between mt-0">
            <div class="col-auto">
                <a href="@Url.Action("Edit", "Component", new { id = Model.Component.ID, page = ViewBag.Page})" class="btn btn-primary mb-3 detail-btn-edit"><i data-feather="edit-2"></i> &nbsp; Edit</a>
            </div>
        </div>
        <nav class="mt-5">
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                <a class="nav-item nav-link active" id="nav-material-preparation-tab" data-toggle="tab" href="#nav-material-preparation" role="tab" aria-controls="nav-material-preparation" aria-selected="true">Material Preparation Process</a>
            </div>
        </nav>

        <div class="tab-content" id="nav-tabContent">
            <div class="tab-pane fade show active" id="nav-material-preparation" role="tabpanel" aria-labelledby="nav-material-preparation-tab">
                <div class="form-row align-items-center justify-content-between mt-3 mb-3">
                    <div class="col-auto">
                        <h3 class="sub-title mb-0">List of Material Preparation Process</h3>
                    </div>
                    <div class="col-auto">
                        <a href="#nav-tabContent" class="btn btn-primary add-material-preparation-process"><i data-feather="plus-circle"></i> &nbsp; Add Material Preparation Process</a>
                    </div>
                </div>
                @using (Html.BeginForm("AddMaterialPreparation", "Component", new { componentID = Model.Component.ID }))
                {
                    <div class="form hide">
                        <div class="row">
                            @Html.HiddenFor(model => model.Component.ID)
                            <input type="text" class="currentPage hide" id="currentPage" name="currentPage" value="@ViewBag.Page" />

                            <div class="col-xl-6 col-12 custom-form-field">
                                <p class="form-custom-label">Select Material Preparation Process</p>
                                @Html.ListBoxFor(model => model.SelectedMaterialPreparationProcess, new MultiSelectList(Model.MaterialPreparationProcessesCollections, "ID", "Name"), new { @class = "materialPreparation", id = "materialPreparation", multiple = "multiple" })
                                <p class="material-preparation-process-validation text-danger"></p>
                            </div>
                        </div>
                        <div class="row justify-content-between mt-3">
                            <div class="col-auto">
                                <button type="submit" class="btn btn-success submit mr-0 mb-3"><i data-feather="save"></i> &nbsp; Save</button>
                                <a class="btn btn-danger cancel-add-material-preparation-process mr-0 mb-3"><i data-feather="x-circle"></i> &nbsp; Cancel</a>
                            </div>
                        </div>
                    </div>
                }
                <div class="table-responsive">
                    <table class="table card-table bordered">
                        <thead>
                            <tr>
                                <th>
                                    No
                                </th>
                                <th>
                                    Material Preparation Process
                                </th>
                                <th>
                                    Man Hour
                                </th>
                                <th>
                                    Action
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var indexNumber = 1;
                            }
                            @foreach (var item in Model.ComponentMaterialPreparationProcesses)
                            {
                                <tr class="material-preparation-process">
                                    <td>
                                        @indexNumber
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.MaterialPreparationProcess.Name)
                                    </td>
                                    <td class="value-label" align="right">
                                        <label for="valueLabel">@Html.DisplayFor(modelItem => item.Value)</label>
                                    </td>
                                    <td class="value-form hide">
                                        <input type="text" class="form-control" value="@Html.DisplayFor(modelItem => item.Value)" name="materialValue" />
                                    </td>
                                    <td class="edit-action">
                                        <input type="text" value="@item.ID" class="materialPreparationProcesID hide" name="materialPreparationProcesID" />
                                        <button class="btn btn-dark btn-sm edit-product-composition" role="button"  data-toggle="tooltip" data-placement="top" title="Edit"><i data-feather="edit-2"></i></button>
                                        <button class="btn btn-danger btn-sm delete-material-reparationProcess" role="button"  data-toggle="tooltip" data-placement="top" title="Delete"><i data-feather="trash-2"></i></button>
                                    </td>
                                    <td class="cancel-action hide">
                                        <button class="btn btn-danger btn-sm cancel-edit-material-preparation-process" role="button"  data-toggle="tooltip" data-placement="top" title="Cancel"><i data-feather="x-circle"></i></button>
                                        <button class="btn btn-success btn-sm save-material-preparation-process" role="button"  data-toggle="tooltip" data-placement="top" title="Save"><i data-feather="save"></i></button>
                                    </td>
                                </tr>
                                indexNumber++;
                            }
                        </tbody>
                    </table>
                </div>
                <div class="row justify-content-between mt-3">
                    <div class="col-auto">
                        <a href="@Url.Action("Index", "Component", new { page = ViewBag.Page})" class="btn btn-primary mb-3"><i data-feather="arrow-left"></i> &nbsp; Back to Component</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="loading hide">
    <i class="fa fa-2x fa-spinner fa-spin"></i>
    <label>Please wait while Saving Data...</label>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")

    <script>
        $(document).ready(function () {
            $('.submit').click(function (e) {
                $('.material-preparation-process-validation').text("");
                var materialPreparationProcess = $('#materialPreparation').val();

                if (materialPreparationProcess == null || materialPreparationProcess == '') {
                    e.preventDefault();
                    $('.material-preparation-process-validation').text("Material preparation process can't be empty");
                }
                else {
                    $('.material-preparation-process-validation').text("");
                    $('.loading').removeClass('hide');
                    $(this).prop("disabled", true);
                    $('form').submit();
                }
            });

            var materialPreparationID = 0;
            var materialPreparationValue = 0;

            $('#materialPreparation').chosen({
                width: "300px",
                search_contains: true
            });

            $('.add-material-preparation-process').click(function () {
                $('.form').removeClass('hide');
            });

            $('.cancel-add-material-preparation-process').click(function () {
                $('.form').addClass('hide');
            })

            $('.edit-product-composition').click(function () {
                $(this).closest(".material-preparation-process").find('.value-label').addClass('hide');
                $(this).closest(".material-preparation-process").find('.edit-action').addClass('hide');
                $(this).closest(".material-preparation-process").find('.cancel-action').removeClass('hide');
                $(this).closest(".material-preparation-process").find('.value-form').removeClass('hide');
            });

            $('.cancel-edit-material-preparation-process').click(function () {
                $(this).closest(".material-preparation-process").find('.value-label').removeClass('hide');
                $(this).closest(".material-preparation-process").find('.edit-action').removeClass('hide');
                $(this).closest(".material-preparation-process").find('.cancel-action').addClass('hide');
                $(this).closest(".material-preparation-process").find('.value-form').addClass('hide');
            });

            $('.save-material-preparation-process').click(".material-preparation-process",function () {
                $('.loading').removeClass('hide');
                materialPreparationID = $(this).closest(".material-preparation-process").find("input[name='materialPreparationProcesID']").val();
                materialPreparationValue = $(this).closest(".material-preparation-process").find("input[name='materialValue']").val();
                var data = {
                    ID: materialPreparationID,
                    Value: materialPreparationValue
                };
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("EditMaterialPreparation", "Component")",
                    context: this,
                    data: data,
                    success: function (response) {
                        $('.loading').addClass('hide');
                        if (response.success) {
                            alert(response.responseText);
                            $(this).closest(".material-preparation-process").find('.value-form').addClass('hide');
                            $(this).closest(".material-preparation-process").find('.value-label').removeClass('hide');
                            $(this).closest(".material-preparation-process").find('.edit-action').removeClass('hide');
                            $(this).closest(".material-preparation-process").find('.cancel-action').addClass('hide');
                            $(this).closest(".material-preparation-process").find("input[name='materialValue']").val(materialPreparationValue);
                            $(this).closest(".material-preparation-process").find("label[for='valueLabel']").text(materialPreparationValue);
                        }
                    }
                });

            });

            $('.delete-material-reparationProcess').click(function () {
                materialPreparationID = $(this).closest(".material-preparation-process").find("input[name='materialPreparationProcesID']").val();
                var currentPage = $('.currentPage').val();

                if (confirm("Are you sure want to delete this material preparation process?")) {
                    $('.loading').removeClass('hide');
                    window.location.href = "@Url.Action("DeleteMaterialPreparation", "Component")?id=" + materialPreparationID + "&page=" + currentPage;
                };
                return false;
            });
        });


    </script>
}
@*//window.location.href = "@Url.Action("Details", "Component")?id=" + materialPreparationID;*@
