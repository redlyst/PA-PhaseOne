@model PagedList.IPagedList<PowerAppsCMS.Models.Role>
@using PagedList.Mvc

@{
    ViewBag.Title = "Role";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">User Management</li>
        <li class="breadcrumb-item active" aria-current="page">Roles</li>
    </ol>
</nav>
<h1 class="page-title">Roles</h1>
<div class="card shadow">
    <div class="card-header">
        List of Roles
    </div>
    <div class="form-row align-items-center justify-content-between filter-table-row">
        <div class="col-auto">
            @using (Html.BeginForm("Index", "Role", FormMethod.Get))
            {
                <div class="form-inline">
                    <div class="form-group">
                        <label>Find by name</label>
                        @Html.TextBox("searchName", ViewBag.CurrentFilter as string, new { @class = "form-control mx-sm-3", placeholder="Enter Name" })
                    </div>
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            }
        </div>
        <div class="col-auto">
            <a href="@Url.Action("Create", "Role")" class="btn btn-primary"><i data-feather="plus-circle"></i> &nbsp; Add Role</a>
        </div>
    </div>
    <table class="table card-table">
        <thead>
            <tr>
                <th>
                    No
                </th>
                <th>
                    Role
                </th>
                <th>
                    Parent Role
                </th>
                <th>Power Apps Access</th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                var pageNumber = Convert.ToInt32(ViewBag.PageNumber);
                var itemperPage = Convert.ToInt32(ViewBag.ItemperPage);
                var currentNumber = ((pageNumber - 1) * itemperPage) + 1;
            }
            
            @foreach (var item in Model)
            {
                <tr class="role">
                    <td>
                        @currentNumber
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ParentRole.Name)
                    </td>
                    <td>
                        @{
                            if (item.HaveAccessPowerApps == true)
                            {
                                <p class="text-success">Yes</p>
                            }
                            else
                            {
                                <p class="text-danger">No</p>
                            }
                        }
                    </td>
                    <td>
                        <input type="text" value="@item.ID" class="roleId hide" name="roleId" />
                        <a href="@Url.Action("Edit", "Role", new { id = item.ID, page = ViewBag.Page})" class="btn btn-dark btn-sm" data-toggle="tooltip" data-placement="top" title="Edit"><i data-feather="edit-2"></i></a>
                        <a class="btn btn-danger btn-sm deleteRole" role="button" data-toggle="tooltip" data-placement="top" title="Delete"><i data-feather="trash-2"></i></a>
                    </td>
                </tr>
                currentNumber++;
            }
        </tbody>
    </table>
    <div class="p-3">
        <div class="row justify-content-md-center custom-pagination align-items-center">
            <div class="col-auto">
                @Html.PagedListPager(Model, page => Url.Action("Index",
                    new { page, currentFilter = ViewBag.CurrentFilter }))
            </div>
        </div>
    </div>
</div>

<div class="loading hide">
    <i class="fa fa-2x fa-spinner fa-spin"></i>
    <label>Please wait while Saving Data...</label>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            var roleId = 0;

            $(".deleteRole").click(function () {
                roleId = $(this).closest(".role").find("input[name='roleId']").val();
                if (confirm("Are you sure want to delete this role?")) {
                    $('.loading').removeClass('hide');
                    window.location.href = "@Url.Action("Delete", "Role")?id=" +roleId;
                };
                return false;
            });
        });
    </script>
}
