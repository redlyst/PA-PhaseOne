@model PowerAppsCMS.Models.Component

@{
    ViewBag.Title = "Create Component";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">Product Management</li>
        <li class="breadcrumb-item">Manage Component</li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Component")">Components</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add Component</li>
    </ol>
</nav>
<h1 class="page-title">Add Component</h1>



@*@Html.AntiForgeryToken()*@
@using (Html.BeginForm("Create", "Component", FormMethod.Post))
{
    <div class="row">
        <div class="col-xl-9 col-12">
            <div class="card shadow">
                <div class="card-header">
                    Create new component
                </div>

                <div class="custom-form-container">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-xl-6 col-12 custom-form-field">
                            <p class="form-custom-label">Part Number</p>
                            @Html.EditorFor(model => model.PartNumber, new { htmlAttributes = new { @class = "form-control full-width", placeholder = "Enter Part Number" } })
                            @Html.ValidationMessageFor(model => model.PartNumber, "", new { @class = "text-danger validation-error" })
                            <p class="text-danger">@ViewBag.ExistComponent</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-6 col-12 custom-form-field">
                            <p class="form-custom-label">Part</p>
                            @Html.EditorFor(model => model.PartName, new { htmlAttributes = new { @class = "form-control full-width", placeholder = "Enter Part Name" } })
                            @Html.ValidationMessageFor(model => model.PartName, "", new { @class = "text-danger validation-error" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-6 col-12 custom-form-field">
                            <p class="form-custom-label">Select Material</p>
                            @Html.DropDownList("MaterialID", null, "Select Material", htmlAttributes: new { @class = "form-control full-width" })
                            @Html.ValidationMessageFor(model => model.MaterialID, "", new { @class = "text-danger validation-error" })
                        </div>
                    </div>
                    <p class="form-custom-label">Measurement for long, width and thickness are in mm</p>
                    <div class="row">

                        <div class="col-xl-4 col-12 custom-form-field">
                            <p class="form-custom-label">Long</p>
                            @Html.EditorFor(model => model.Long, new { htmlAttributes = new { @class = "form-control small-form" } })
                            @Html.ValidationMessageFor(model => model.Long, "", new { @class = "text-danger validation-error" })
                        </div>
                        <div class="col-xl-4 col-12 custom-form-field">
                            <p class="form-custom-label">Width</p>
                            @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control small-form", placeholder = "Enter Width" } })
                            @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger validation-error" })
                        </div>
                        <div class="col-xl-4 col-12 custom-form-field">
                            <p class="form-custom-label">Thickness</p>
                            @Html.EditorFor(model => model.Thickness, new { htmlAttributes = new { @class = "form-control small-form", placeholder = "Enter Height/Thickness Flange" } })
                            @Html.ValidationMessageFor(model => model.Thickness, "", new { @class = "text-danger validation-error" }) 
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-6 col-12 custom-form-field">
                            <p class="form-custom-label">Outer Diameter</p>
                            @Html.EditorFor(model => model.OuterDiameter, new { htmlAttributes = new { @class = "form-control full-width", placeholder = "Enter Outer Diameter" } })
                            @Html.ValidationMessageFor(model => model.OuterDiameter, "", new { @class = "text-danger validation-error" })
                        </div>
                        <div class="col-xl-6 col-12 custom-form-field">
                            <p class="form-custom-label">Inner Diameter</p>
                            @Html.EditorFor(model => model.InnerDiameter, new { htmlAttributes = new { @class = "form-control full-width", placeholder = "Enter Inner Diameter" } })
                            @Html.ValidationMessageFor(model => model.InnerDiameter, "", new { @class = "text-danger validation-error" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-6 col-12 custom-form-field">
                            <p class="form-custom-label">In House</p>
                            @Html.EditorFor(model => model.IsInHouse)
                            @Html.ValidationMessageFor(model => model.IsInHouse, "", new { @class = "text-danger validation-error" })
                        </div>
                    </div>
                    <div class="row justify-content-between mt-5 add-component-action">
                        <div class="col-auto">
                            <a href="@Url.Action("Index", "Component")" class="btn btn-primary mb-3"><i data-feather="arrow-left"></i> &nbsp; Back to Component</a>
                        </div>
                        <div class="col-auto">
                            <button type="submit" class="btn btn-success submit mr-0 mb-3"><i data-feather="save"></i> &nbsp; Create</button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
}



<div>
    <p class="text-danger">@ViewBag.Exception</p>
</div>

<div class="loading hide">
    <i class="fa fa-2x fa-spinner fa-spin"></i>
    <label>Please wait while Saving Data...</label>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
           
            $('#MaterialID').chosen({
                search_contains: true
            });

            $('.submit').click(function (e) {

                $("[data-valmsg-for='MaterialID']").text("");
                var material = $('#MaterialID').val();
                if (material == null || material == '') {
                    $('.loading').addClass('hide');
                    $("[data-valmsg-for='MaterialID']").text("Material must be selected");
                    e.preventDefault()
                }
                else if (!$('form').valid()) {
                    $('.loading').addClass('hide');
                    e.preventDefault()
                }
                else {
                    $(this).prop("disabled", true);
                    $('.loading').removeClass('hide');
                    $("[data-valmsg-for='MaterialID']").text("");
                    $('form').submit();
                }
            });

            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        }); 
    </script>
}
